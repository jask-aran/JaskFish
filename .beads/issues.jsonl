{"id":"JaskFish-1","title":"Overhaul benchmark harness to mirror GUI orchestration","description":"Context: see agent_plans/benchmark_harness_overhaul_plan.md. Goal is to replace the ad-hoc script with a modular harness that reuses GUI/self-play orchestration, supports flexible budgets, captures telemetry, and stays extensible.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-16T00:03:07.256347403+11:00","updated_at":"2025-10-16T00:32:45.548771111+11:00","closed_at":"2025-10-16T00:32:45.548771111+11:00","dependencies":[{"issue_id":"JaskFish-1","depends_on_id":"JaskFish-2","type":"parent-child","created_at":"2025-10-16T00:05:21.498021632+11:00","created_by":"jask"},{"issue_id":"JaskFish-1","depends_on_id":"JaskFish-3","type":"parent-child","created_at":"2025-10-16T00:05:34.582260373+11:00","created_by":"jask"},{"issue_id":"JaskFish-1","depends_on_id":"JaskFish-4","type":"parent-child","created_at":"2025-10-16T00:05:41.970088629+11:00","created_by":"jask"},{"issue_id":"JaskFish-1","depends_on_id":"JaskFish-5","type":"parent-child","created_at":"2025-10-16T00:05:51.404953796+11:00","created_by":"jask"},{"issue_id":"JaskFish-1","depends_on_id":"JaskFish-6","type":"parent-child","created_at":"2025-10-16T00:05:58.193526441+11:00","created_by":"jask"},{"issue_id":"JaskFish-1","depends_on_id":"JaskFish-7","type":"parent-child","created_at":"2025-10-16T00:06:15.396492979+11:00","created_by":"jask"},{"issue_id":"JaskFish-1","depends_on_id":"JaskFish-8","type":"parent-child","created_at":"2025-10-16T00:06:36.247603427+11:00","created_by":"jask"}]}
{"id":"JaskFish-10","title":"Eliminate python-chess hotspots in PVS search loop","description":"Replace board.generate_legal_moves/gives_check/push/pop usage with custom generators and integrated check detection per agent_plans/pvsengine_improvement_plan.md section 4.1.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:07:03.180941067+11:00","updated_at":"2025-10-16T00:32:45.639617696+11:00","closed_at":"2025-10-16T00:32:45.639617696+11:00"}
{"id":"JaskFish-11","title":"Introduce incremental feature stack for PVS evaluation","description":"Implement push/pop feature stack that maintains material, PST, phase, and mobility deltas so _evaluate becomes incremental as described in agent_plans/pvsengine_improvement_plan.md section 4.2 and Next Actions.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:07:11.927992473+11:00","updated_at":"2025-10-16T00:32:45.650812039+11:00","closed_at":"2025-10-16T00:32:45.650812039+11:00"}
{"id":"JaskFish-12","title":"Restore quiescence coverage for quiet checking moves","description":"Add lightweight quiet-check generation that avoids python-chess full move scans while preserving tactical coverage per agent_plans/pvsengine_improvement_plan.md section 4.3.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:07:16.588674334+11:00","updated_at":"2025-10-16T00:32:45.66072699+11:00","closed_at":"2025-10-16T00:32:45.66072699+11:00"}
{"id":"JaskFish-13","title":"Retune PVS hyperparameters after throughput gains","description":"Re-run benchmark_pvs.py with alternate MetaParams, adjust quiescence SEE thresholds, and compare search depth scaling as suggested in agent_plans/pvsengine_improvement_plan.md section 4.4.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:07:25.093232661+11:00","updated_at":"2025-10-16T00:32:45.673315931+11:00","closed_at":"2025-10-16T00:32:45.673315931+11:00"}
{"id":"JaskFish-14","title":"Implement SearchBoard and custom move generator to replace python-chess","description":"Follow the Python-chess Escape Blueprint in agent_plans/pvsengine_improvement_plan.md section 7: build bitboard-backed SearchBoard, emit legal moves without python-chess, implement push/pop, and validate parity against curated FEN suites.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:07:43.382116925+11:00","updated_at":"2025-10-16T00:32:45.689303894+11:00","closed_at":"2025-10-16T00:32:45.689303894+11:00"}
{"id":"JaskFish-15","title":"Record benchmark and profile snapshots for PVS roadmap","description":"After each major search refactor, capture benchmark and profile outputs (nodes, depth, NPS, hotspot breakdown) as called out in agent_plans/pvsengine_improvement_plan.md section 6.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:08:02.956003365+11:00","updated_at":"2025-10-16T00:32:45.70324772+11:00","closed_at":"2025-10-16T00:32:45.70324772+11:00"}
{"id":"JaskFish-16","title":"Epic: CPvsEngine evaluation and throughput upgrade","description":"Coordinate the remaining evaluation and throughput scope captured in docs/cpvsengine_improvement_plan.md. Ensure each child issue delivers:\n- Evaluation overhaul (#1)\n- Advanced profiling (#2)\n- Parallel search extensions (#3)\n- Validation automation (#4)\n- Search throughput uplift (#5)\nUpdate the plan document when scope changes land.","status":"open","priority":2,"issue_type":"epic","created_at":"2025-10-16T00:09:20.222468018+11:00","updated_at":"2025-10-15T13:50:06Z","dependencies":[{"issue_id":"JaskFish-16","depends_on_id":"JaskFish-17","type":"parent-child","created_at":"2025-10-16T00:11:41.511528807+11:00","created_by":"jask"},{"issue_id":"JaskFish-16","depends_on_id":"JaskFish-18","type":"parent-child","created_at":"2025-10-16T00:11:51.556880338+11:00","created_by":"jask"},{"issue_id":"JaskFish-16","depends_on_id":"JaskFish-19","type":"parent-child","created_at":"2025-10-16T00:11:57.102569014+11:00","created_by":"jask"},{"issue_id":"JaskFish-16","depends_on_id":"JaskFish-20","type":"parent-child","created_at":"2025-10-16T00:12:03.593204552+11:00","created_by":"jask"},{"issue_id":"JaskFish-16","depends_on_id":"JaskFish-21","type":"parent-child","created_at":"2025-10-16T00:12:10.924477126+11:00","created_by":"jask"},{"issue_id":"JaskFish-16","depends_on_id":"JaskFish-22","type":"parent-child","created_at":"2025-10-16T00:12:28.781801292+11:00","created_by":"jask"},{"issue_id":"JaskFish-16","depends_on_id":"JaskFish-23","type":"parent-child","created_at":"2025-10-16T00:12:33.402501475+11:00","created_by":"jask"},{"issue_id":"JaskFish-16","depends_on_id":"JaskFish-24","type":"parent-child","created_at":"2025-10-16T00:12:38.397344727+11:00","created_by":"jask"},{"issue_id":"JaskFish-16","depends_on_id":"JaskFish-25","type":"parent-child","created_at":"2025-10-16T00:12:42.09503904+11:00","created_by":"jask"}]}
{"id":"JaskFish-17","title":"Establish cpvsengine evaluation parity baselines","description":"Snapshot current C vs Python evaluation scores across benchmark suites, catalogue desired Python features, and collect representative FENs as described in agent_plans/cpvsengine_improvement_plan.md section 1.1.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-16T00:09:41.885531539+11:00","updated_at":"2025-10-16T00:09:41.885531539+11:00"}
{"id":"JaskFish-18","title":"Introduce tapered evaluation scaffolding in cpvsengine","description":"Port game phase logic, extend PST tables for midgame/endgame splits, and scale evaluation with phase inputs per agent_plans/cpvsengine_improvement_plan.md section 1.2.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-16T00:09:59.820838351+11:00","updated_at":"2025-10-16T00:09:59.820838351+11:00"}
{"id":"JaskFish-19","title":"Implement incremental evaluation state bookkeeping in cpvsengine","description":"Store material, phase, PST, and cache deltas on the move stack to enable O(1) updates in make_move/undo_move, including king square and pawn bitboard caches per agent_plans/cpvsengine_improvement_plan.md section 1.3.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-16T00:10:17.982293688+11:00","updated_at":"2025-10-16T00:10:17.982293688+11:00"}
{"id":"JaskFish-2","title":"Audit current benchmark_pvs.py to mirror GUI orchestration","description":"Inventory current CLI flags, UCI sequencing, and profiling hooks in benchmark_pvs.py; compare against SelfPlayManager and main.py flows to document the gaps noted in agent_plans/benchmark_harness_overhaul_plan.md.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:03:37.68559195+11:00","updated_at":"2025-10-16T00:32:45.562041008+11:00","closed_at":"2025-10-16T00:32:45.562041008+11:00"}
{"id":"JaskFish-20","title":"Add staged evaluation feature terms to cpvsengine","description":"Implement pawn structure, mobility, king safety, and piece-specific bonuses with appropriate phase gating as detailed in agent_plans/cpvsengine_improvement_plan.md section 1.4.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-16T00:10:30.468892952+11:00","updated_at":"2025-10-16T00:10:30.468892952+11:00"}
{"id":"JaskFish-21","title":"Tune cpvsengine evaluation weights and validate","description":"Adopt Python defaults, expose weights for tuning, run self-play/Texel loops, and expand regression suites per agent_plans/cpvsengine_improvement_plan.md section 1.5.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-16T00:10:40.891040236+11:00","updated_at":"2025-10-16T00:10:40.891040236+11:00"}
{"id":"JaskFish-22","title":"Run advanced profiling and micro-optimisation for cpvsengine","description":"Profile after each feature drop, experiment with data layouts, and extend instrumentation timers as outlined in agent_plans/cpvsengine_improvement_plan.md section 2.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-16T00:11:01.263305864+11:00","updated_at":"2025-10-16T00:11:01.263305864+11:00"}
{"id":"JaskFish-23","title":"Explore parallel and depth extensions for cpvsengine","description":"Prototype threaded search (YBWC-style) and speculative move prefetching behind build flags after the single-thread baseline stabilises, per agent_plans/cpvsengine_improvement_plan.md section 3.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-16T00:11:10.03355512+11:00","updated_at":"2025-10-16T00:11:10.03355512+11:00"}
{"id":"JaskFish-24","title":"Automate cpvsengine validation and release checks","description":"Assemble regression harnesses (perft, STS, evaluation parity), integrate gauntlet runs, and document tuning scripts per agent_plans/cpvsengine_improvement_plan.md section 4.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-16T00:11:28.229966025+11:00","updated_at":"2025-10-16T00:11:28.229966025+11:00"}
{"id":"JaskFish-25","title":"Epic: CPvsEngine search throughput uplift","description":"Deliver the throughput roadmap in docs/cpvsengine_improvement_plan.md#5-search-throughput-uplift-offset-evaluation-cost covering baselines, incremental caching, move-generation and SEE optimisations, TT upgrades, parallel search, and build tuning so evaluation costs are offset.","status":"open","priority":2,"issue_type":"epic","created_at":"2025-10-16T00:11:34.491955114+11:00","updated_at":"2025-10-15T13:50:06Z","dependencies":[{"issue_id":"JaskFish-25","depends_on_id":"JaskFish-26","type":"parent-child","created_at":"2025-10-16T00:51:07.416779978+11:00","created_by":"jask"}]}
{"id":"JaskFish-26","title":"Maintain CPvsEngine performance baselines","description":"Keep benchmarks/cpvsengine_benchmark_laptop_baseline.txt aligned with docs/cpvsengine_improvement_plan.md#5-search-throughput-uplift-offset-evaluation-cost by refreshing metrics after engine changes and flagging \u003e5% regressions.","status":"open","priority":2,"issue_type":"chore","created_at":"2025-10-16T00:13:06.703183585+11:00","updated_at":"2025-10-15T13:50:06Z"}
{"id":"JaskFish-27","title":"Epic: Repository housekeeping and reorganization","description":"Track miscellaneous structural cleanups so top-level layout stays focused. Cover engine relocation, utility consolidation, and related refactors that do not belong to other epics.","status":"open","priority":2,"issue_type":"epic","created_at":"2025-10-16T01:32:51.393129408+11:00","updated_at":"2025-10-16T01:32:51.393129408+11:00","dependencies":[{"issue_id":"JaskFish-27","depends_on_id":"JaskFish-28","type":"parent-child","created_at":"2025-10-16T01:34:42.401977813+11:00","created_by":"jask"},{"issue_id":"JaskFish-27","depends_on_id":"JaskFish-29","type":"parent-child","created_at":"2025-10-16T01:34:50.725206501+11:00","created_by":"jask"}]}
{"id":"JaskFish-28","title":"Restructure engine scripts under engines/ directory","description":"Relocate all engine entrypoints (pvsengine.py, simple_engine.py, hsengine.py, and native bindings) into an engines/ package while preserving the native build and Makefile in engines/native/. Update every hardcoded path (GUI wiring, self-play harness, tests, docs, packaging scripts) so new imports resolve, and confirm native builds still succeed.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T01:33:27.634674945+11:00","updated_at":"2025-10-16T02:03:39.336783893+11:00","closed_at":"2025-10-16T02:03:39.336783893+11:00"}
{"id":"JaskFish-29","title":"Consolidate shared modules into parent entrypoint","description":"Assess whether chess_logic.py, conftest.py, and utils.py can merge into main.py or another consolidated module. Outline migration plan, ensure tests keep their fixtures, and leave only GUI, main, benchmark, and engines/ scripts at the repository root.","status":"open","priority":2,"issue_type":"chore","created_at":"2025-10-16T01:33:50.058153238+11:00","updated_at":"2025-10-16T01:33:50.058153238+11:00"}
{"id":"JaskFish-3","title":"Define unified CLI and configuration surface for benchmark harness","description":"Design argparse structure (subcommands or grouped flags) that supports benchmark/profile/analyze modes, JSON/YAML scenario configs, and budget overrides per agent_plans/benchmark_harness_overhaul_plan.md.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:03:47.418002965+11:00","updated_at":"2025-10-16T00:32:45.572113994+11:00","closed_at":"2025-10-16T00:32:45.572113994+11:00"}
{"id":"JaskFish-4","title":"Implement EngineSession abstraction for benchmark flows","description":"Build a reusable EngineSession that issues UCI commands (uci, ucinewgame, position, go), captures JSON info payloads, and reuses logging hooks per agent_plans/benchmark_harness_overhaul_plan.md.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:03:56.513198212+11:00","updated_at":"2025-10-16T00:32:45.580632483+11:00","closed_at":"2025-10-16T00:32:45.580632483+11:00"}
{"id":"JaskFish-5","title":"Add budget adapter layer for benchmark harness","description":"Map CLI budget flags to UCI go payloads and integrate GUI-style default budgeting, including movetime/depth/nodes overrides as outlined in agent_plans/benchmark_harness_overhaul_plan.md.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:04:14.041682786+11:00","updated_at":"2025-10-16T00:32:45.591073665+11:00","closed_at":"2025-10-16T00:32:45.591073665+11:00"}
{"id":"JaskFish-6","title":"Port benchmark/profile scenarios onto new harness architecture","description":"Refactor existing benchmark and profile flows into Scenario classes, add batch FEN and unlimited-analysis modes, and ensure they share the EngineSession per agent_plans/benchmark_harness_overhaul_plan.md.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:04:34.917083335+11:00","updated_at":"2025-10-16T00:32:45.601282305+11:00","closed_at":"2025-10-16T00:32:45.601282305+11:00"}
{"id":"JaskFish-7","title":"Standardize reporting and export pipeline for benchmark harness","description":"Implement console summaries, optional JSON/CSV exports, raw UCI transcript saving, and profiling artefact handling as described in agent_plans/benchmark_harness_overhaul_plan.md.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:04:55.749694987+11:00","updated_at":"2025-10-16T00:32:45.610812504+11:00","closed_at":"2025-10-16T00:32:45.610812504+11:00"}
{"id":"JaskFish-8","title":"Document new benchmark harness workflows","description":"Update README.md and docs/testing_architecture.md with CLI usage, budget adapters, and sample sessions once the overhaul lands, per agent_plans/benchmark_harness_overhaul_plan.md.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-16T00:05:03.635134278+11:00","updated_at":"2025-10-16T00:32:45.62050124+11:00","closed_at":"2025-10-16T00:32:45.62050124+11:00"}
{"id":"JaskFish-9","title":"Advance PVS engine roadmap from agent plan","description":"Track outstanding experiments and refactors captured in agent_plans/pvsengine_improvement_plan.md, spanning python-chess hotspots, incremental feature stack, quiescence coverage, hyperparameter follow-up, and Python-chess escape blueprint.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-16T00:06:40.932344591+11:00","updated_at":"2025-10-16T00:32:45.631520373+11:00","closed_at":"2025-10-16T00:32:45.631520373+11:00","dependencies":[{"issue_id":"JaskFish-9","depends_on_id":"JaskFish-10","type":"parent-child","created_at":"2025-10-16T00:08:21.440816713+11:00","created_by":"jask"},{"issue_id":"JaskFish-9","depends_on_id":"JaskFish-11","type":"parent-child","created_at":"2025-10-16T00:08:28.550483597+11:00","created_by":"jask"},{"issue_id":"JaskFish-9","depends_on_id":"JaskFish-12","type":"parent-child","created_at":"2025-10-16T00:08:45.970057814+11:00","created_by":"jask"},{"issue_id":"JaskFish-9","depends_on_id":"JaskFish-13","type":"parent-child","created_at":"2025-10-16T00:09:03.319249018+11:00","created_by":"jask"},{"issue_id":"JaskFish-9","depends_on_id":"JaskFish-14","type":"parent-child","created_at":"2025-10-16T00:09:05.828759126+11:00","created_by":"jask"},{"issue_id":"JaskFish-9","depends_on_id":"JaskFish-15","type":"parent-child","created_at":"2025-10-16T00:09:14.907005297+11:00","created_by":"jask"}]}
